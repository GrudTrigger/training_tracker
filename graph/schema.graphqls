scalar Time

type User {
	id: ID!
	email: String!
	login: String!
	password: String!
	role: String! #Надо подумать делать обязательным или нет
	telegram_id: String #При регистрации не нужно, только потом подвязывать
	created_at: Time
}

type AuthPayload {
	token: String!
	user: User!
}

#Inputs
input LoginInput {
	email: String!
	password: String!
}

input RegisterInput {
	email: String!
	login: String!
	password: String!
	role: String!
}

type Query {
	user(email: String!): User
	me: User!
	userById(id: ID!): User
	users: [User!]!
}

type Mutation {
	register(input: RegisterInput!): AuthPayload!
	login(input: LoginInput!): AuthPayload!
}
